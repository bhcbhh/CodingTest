#include <iostream>
using namespace std;

int N,ret;
int arr[21][21];
int team_start[11], team_link[11]; // 한 팀에 많아봤자 10명이니까.  
int pick[21]; // 그 뽑혔는 지 안뽑혔는 지 확인하는 배열이다.  


void update(){
	/*for(int i = 1; i <= N; i++){
		cout << pick[i] << " ";	
		}
	cout << endl; */
	int start_size = 0, link_size = 0;
	for(int i = 1; i <= N; i++){
		if((pick[i]) == 0) team_start[start_size++] = i;
		else team_link[link_size++] = i;
	}
	
	int sum_start = 0, sum_link = 0;
	
	for(int i = 1; i < N; i++){
		for(int j = i+1; j <= N; j++){
			sum_start += arr[team_start[i]][team_start[j]] +  arr[team_start[j]][team_start[i]];
			sum_link += arr[team_link[i]][team_link[j]] +  arr[team_link[j]][team_link[i]];
		}
	}
	
	if(ret > abs(sum_start - sum_link)) ret = abs(sum_start - sum_link);
	
}




void dfs(int cur, int pick_count){ // pick_count 는 2/N 을 뽑았으면 멈추게 만들 친구 
	if(pick_count == (N/2)){
		update(); // 점수 계산하는 함수  
		return;
	}
	// printf("pick count : %d   cur : %d \n",pick_count,cur);
//	cout << "재귀함수 곧 들어간다" << endl << endl; 
	
	for(int i = cur; i <= N; i++){
		pick[i] = 1;
		dfs(cur+1,pick_count+1);
	//	cout << i << " 재귀함수 나왔다" << endl << endl; 
		pick[i] = 0;
	//	cout << i << "for문 나왔다" << endl << endl;	
	} 
}


int main(){
	cin >> N;
	
	// 배열 입력받기  
	for(int i = 1; i <= N; i++){
		for(int j = 1; j <= N ; j++){
			cin >> arr[j][i];	
		}
	}
	
	ret = 99999;
	dfs(1,0); 
	cout << ret; 
	
} 
