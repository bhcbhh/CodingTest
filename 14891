#include <iostream>
#include <string>
#include <vector>
using namespace std;

vector <int> v;
int k,num_wheel,dir_wheel;

int arr1[8];
int arr2[8];
int arr3[8];
int arr4[8];

// 1 = 시계 방향 () / -1 = 반시계 방향 
void rotate(int *temp,int dir){
	
	// 왼쪽으로 한 칸씩 이동 
	if(dir == -1){
   	  int temp1 = temp[0];
   	for(int j = 0; j < 7; j++){
   		temp[j] = temp[j+1];
	   } temp[7] = temp1;
      }
	
	// 오른쪽으로 한 칸씩 이동  
   else{
   	 int temp1 = temp[7];
   	for(int j = 7; j > 0; j--){
   		temp[j] = temp[j-1];
	   } temp[0] = temp1;
      } 

}




int main(){
	
	int answer;
	
	for(int i = 0; i <4; i++){
      	 int temp;
      	 cin >> temp;
		 v.push_back(temp);  
	}

	// arr1 담는 코드 
		for(int j = 7 ; j >= 0; j--){
			arr1[j] = v[0] %10;
			v[0] = v[0] / 10;
		}		

    // arr2 담는 코드  
		for(int j = 7 ; j >= 0; j--){
			arr2[j] = v[1] %10;
			v[1] = v[1] / 10;
		}		

    // arr3 담는 코드  
		for(int j = 7 ; j >= 0; j--){
			arr3[j] = v[2] %10;
			v[2] = v[2] / 10;
		}		


   // arr4 담는 코드  
		for(int j = 7 ; j >= 0; j--){
			arr4[j] = v[3] %10;
			v[3] = v[3] / 10;
		}		
	   
    cin >> k;
	for(int i = 0 ; i < k; i++){
	  cin >> num_wheel >> dir_wheel;  // dir = 1 이면 시계방향 한칸이동, dir = -1 반시계방향한칸이동 
      int check1,check2,check3 = 0;

      if (arr1[2] != arr2[6]) check1 += 1;
	  if (arr2[2] != arr3[6]) check2 += 1; 
	  if (arr3[2] != arr4[6]) check3 += 1; 
  


  switch(num_wheel){
  	case 1 : rotate(arr1,dir_wheel);
  	         if(check1 != 0) rotate(arr2,-dir_wheel);
			 else break;
			 
			 if(check2 != 0) rotate(arr3,dir_wheel);
			 else break;
			 
			 if(check3 != 0) rotate(arr4,-dir_wheel);
			 break;
  	  
	case 2 : rotate(arr2,dir_wheel);
	         if(check1 != 0) rotate(arr1,-dir_wheel);
             
			 if(check2 != 0) rotate(arr3,-dir_wheel);
             else break;
             
			 if(check3 != 0) rotate(arr4,dir_wheel);			 
			 break;
  	
	case 3 : rotate(arr3,dir_wheel);
             if(check3 != 0) rotate(arr4,-dir_wheel);
			 
			 if(check2 != 0) rotate(arr2,-dir_wheel);
             else break;
             
			 if(check1 != 0) rotate(arr1,dir_wheel);
			 break;
  	
	case 4 : rotate(arr4,dir_wheel); 
			 if(check3 != 0) rotate(arr3,-dir_wheel);
             else break;
             
			 if(check2 != 0) rotate(arr2,dir_wheel);
			 else break;
			 
			 if(check1 != 0) rotate(arr1,-dir_wheel);
             break;
  }
}
	if( arr1[0] != 0) answer+=1; 
	if( arr2[0] != 0) answer+=2;
	if( arr3[0] != 0) answer+=4;
	if( arr4[0] != 0) answer+=8;
	
	cout << answer;


	}
